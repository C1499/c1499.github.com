{"meta":{"title":"饼干大超人","subtitle":"给时光以生命，给岁月以文明","description":null,"author":"Simone","url":"https://04071011.xyz"},"pages":[{"title":"关于","date":"2019-01-16T02:52:41.000Z","updated":"2019-03-16T08:45:26.393Z","comments":true,"path":"about/index.html","permalink":"https://04071011.xyz/about/index.html","excerpt":"","text":"&emsp;&emsp;在不久之前就有一点搭建自己的博客的念头，但因为拖延症晚期，一直没能去实现， 最近无意中发现阿里云有一个活动，头脑一热的买了个域名。既然买了域名就要放东西，于是就这么一步步的有了这里的存在。&emsp;&emsp;我还没有想法，在这里存放一些关于我的什么东西，也许是一些生活感悟？大概就是些心灵鸡汤也许是一些教程毕竟老忘事，学了什么记一下也好，也许…说不完的可能性，慢慢写，希望这里能督促我，这样以后回想的时候不会发现自己好像在虚度光阴，总是有留下些什么的……&emsp;&emsp;这里采用的是hexo-theme-random主题，也是我精挑细选实则挑了一天多，最后实在不想再挑的结果，是个很纯净的主题，功能不多，专注写博客。不过说实话到后面就后悔了，毕竟新手上路，什么都想玩一玩，功能都得自己摸索去添加，看着那么多的.swig文件，欲哭无泪，想着应该选个强大的主题，直接配置文件写就行，不过自己选的主题，跪着也要用到最后……是吧 Email:1499832767@qq.com"},{"title":"分类","date":"2019-01-16T02:51:43.000Z","updated":"2019-03-16T08:45:11.300Z","comments":false,"path":"categories/index.html","permalink":"https://04071011.xyz/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2019-03-16T12:20:04.000Z","updated":"2019-03-16T12:41:54.384Z","comments":true,"path":"search/index.html","permalink":"https://04071011.xyz/search/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-01-16T02:50:36.000Z","updated":"2019-03-16T08:45:22.167Z","comments":true,"path":"tags/index.html","permalink":"https://04071011.xyz/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"2020.9.14","slug":"2020-9-14","date":"2020-09-14T08:54:42.000Z","updated":"2020-12-30T12:16:02.974Z","comments":true,"path":"2020/09/14/2020-9-14/","link":"","permalink":"https://04071011.xyz/2020/09/14/2020-9-14/","excerpt":"","text":"数据结构——大O表示法数据结构中算法的空间、时间复杂度一直不是很清楚，看了一遍又一遍但还是没有搞懂的很彻底。处于一种感觉理解又好像不理解的地步，今天就仔仔细细的学一学。首先弄懂时间复杂度吧。 时间复杂度「 大O符号表示法 」是我们表示一个算法所消耗时间的方法，即 T(n) = O(f(n))。它不是表示出一个代码的具体执行时间，而是表示代码执行时间的变化趋势，它也被称作算法的渐进时间复杂度。 推导大O阶的方法 1.用常数1取代运行时间中的发所有加法常数2.在修改后的运行次数函数中，只保留最高阶项3.如果最高阶项存在且不是1，则去除与这个项相乘的常数。 以上内容来自《大话数据结构》P30我觉得简单来说就是结果中含有加法常数的可以省略，去除非最高项的项，与常数相乘的项如果非1，则去除这个常数。例子：O(3n^2+2n+1)=&gt;O(n^2)。 常数阶O(1)1234int sum=0,n=999;sum++;++n;system.out.println(&quot;sum&quot;); 代码块中没有涉及到循环等其他复杂的结构，那么这个代码块的时间复杂度就是O(1)。上面的代码，运行次数函数是f(n)=4,根据推导大O阶的方法，f(n)=1。所以无论上方的代码执行多少次，最终f(n)还是等于1。 线性阶O(n)12345for(i=1; i&lt;=n; ++i) //执行n次&#123; j = i; //执行1次 j++; //执行1次&#125; 这段代码，其实不难看懂。不过有一个疑惑的点，我在看《大话数据结构》时间复杂度一章时，第一行 for 循环的代码，书上计算的是执行n+1次。虽然+1和不+1的区别并不是很大，最终的结果都是 O(n) ,我们也只是需要知道代码的时间增长趋势，但就是纠结这个问题。网上搜索也并没有人提过这个问题，有一个版本的教材前面出现这部分代码时写的是n+1，到了后面就变成了n次。按照我的计算来看，就是n次。得到计算结果后，常数项可以省略。 对数阶O(logN)1234int i=0;while (i&lt;n)&#123; i = i*5;&#125; 每一轮i都会*5，直到i&gt;n才会结束循环。所以5^x=n,x=log5^n。根据我们推导大O阶方法的第三条可得,这段代码的时间复杂度为O(logN)。 线性对数阶O(nlogN)123456for(m=0;m&lt;n;m++)&#123; int i=0; while (i&lt;n)&#123; i = i*5; &#125;&#125; 线性对数阶就是将时间复杂度为O(logN)的代码循环N遍。 平方阶O(n^2)1234567for(i=1; i&lt;=n; ++i) //执行n次&#123; for(j=1;j&lt;=n;j++)&#123; //执行n^2次 j = i; //执行1次 j++; //执行1次 &#125;&#125; 平方阶就是将O(n)的代码循环嵌套一遍，也就是O(n*n)=&gt;O(n^2)次。这个也比较好理解，把之前的掌握后，就容易理解了。 立方阶O(n^3)、K次方阶O(n^k)这两种与平方阶类似，多层循环嵌套。","categories":[{"name":"日常记录","slug":"日常记录","permalink":"https://04071011.xyz/categories/日常记录/"}],"tags":[{"name":"日常记录","slug":"日常记录","permalink":"https://04071011.xyz/tags/日常记录/"},{"name":"2020","slug":"2020","permalink":"https://04071011.xyz/tags/2020/"}]},{"title":"jsp学生管理系统","slug":"jsp学生管理系统","date":"2019-05-18T03:31:22.000Z","updated":"2020-12-30T12:20:48.641Z","comments":true,"path":"2019/05/18/jsp学生管理系统/","link":"","permalink":"https://04071011.xyz/2019/05/18/jsp学生管理系统/","excerpt":"","text":"这学期上了JSP课，虽然说这门技术已经落后了，但抱着“多学一点总没错”的心理还是学了这门课。期中的作业项目是做一个学生管理系统，本可以用spring写的，但是这是个小组作业嘛，总是要顾及一下同学的，毕竟她们还没学，而且也顺带巩固一下jsp，不然连作品都没有，白上半个学期的课了。回归正题，我就在这写一份教程，一是为了传播知识…（虽然不知道会不会有人看）二就是为了让自己以后能快速回顾，好记性不如烂笔头，三就是锻炼自己的写作能力，经常看到一些博主说，多写技术文档对自己是挺有益的。首先我们先分析一个学生管理系统需要有什么功能。 登陆功能（login.jsp） 注册功能（register.jsp） 找回密码功能（forgotPWD.jsp + setPWD.jsp） 修改个人信息功能（updateUser.jsp） 查看所有学生功能（selectStudent.jsp） 添加学生信息功能（addStudent.jsp） 修改学生信息功能（updateStudent.jsp） 删除学生信息功能（delStudent.jsp） 总的来说，基本就以上八种功能，这八种功能无非就是对数据的增删查改，也就是说我们只要能把登陆、注册、找回密码这三个功能做出来，后面那些简直 so easy ！我们先来想想登陆、注册页面需要些什么功能，首先是用户得要输入用户名和密码，一般网站登陆时都得输入验证码对吧，所以我们需要做一个验证码功能。接着是找回密码功能，这个功能就有点复杂，我们不可能说用户想随便找回密码就能找回吧，得确认用户的身份，身份确认的话，就在注册时让用户输入一个邮箱，用户找回密码的时候，就给当时用户注册时填写的邮箱发一封含有验证码的邮件，用户输入正确的验证码才能进行找回密码操作，这样就确定了用户的身份。一般我们都不会直接告诉用户旧密码是什么吧，所以就让用户直接设置新的密码即可。这就确定了两点，一是做一个验证码功能，二是邮件功能。开工吧！ 我们先来连接数据库，这是一个重要的一步，数据库连接出错后面就全盘崩掉。 连接数据库首先，我们在Java Resources下的src目录下建一个包，包名为 com.db.tools ，接着再新建一个类，类名为 DbUtil 。这个类功能就是连接我们的数据库，并提供我们操作数据的方法。这里我使用的是mysql数据库，去 mysql 的官网下载驱动包，我使用的是5.1.44版本。把jar包拖到项目的 Java Resources–WebContent–WEB-INF–lib 下，接着右键 jar 包，找到 Build Path 单击 Add to Build Path 。这一步是把 jar 添加到项目的环境变量中，防止后续出现莫名的错误。导入jar包后，我们就可以来连接数据库了。我的数据库中一共有两张表，一张是用户表，一张时学生信息表。字段名分别为： tb_user:user_no(自增长)、user_number、user_name、user_sex、user_birthday、user_mail、user_pwdtb_student:stuNo、stu_name、stu_sex、stu_nativeplace、stu_birthday、stu_classname 数据库建好后，打开DbUtil类。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354package com.db.tools;import java.sql.Connection;import java.sql.DriverManager;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;public class DbUtil &#123; //定义数据库连接类对象 private Connection conn = null; //定义执行SQL查询语句的API对象 private PreparedStatement pstmt = null; //定义存放结果集类的对象 private ResultSet rs = null; public DbUtil() throws ClassNotFoundException, SQLException &#123; //加载mysql驱动 Class.forName(\"com.mysql.jdbc.Driver\"); //连接数据库，注意这里要把 database 改成自己的数据库名，root改成数据库的用户名，password 改成数据库的密码 conn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/database?user=root&amp;password=password\"); &#125; //查询方法，返回类型为ResultSet public ResultSet dbQuery(String sql) throws SQLException&#123; //加载sql语句 pstmt = conn.prepareStatement(sql); //调用查询方法，把查询到的结果存放在rs中 rs=pstmt.executeQuery(); return rs; &#125; //更新方法，返回类型为boolean public boolean dbUpdate (String sql) throws SQLException&#123; //加载sql语句 pstmt = conn.prepareStatement(sql); //调用更新方法，如果更新成功则返回true if(pstmt.executeUpdate()&gt;0)&#123; return true; &#125;else&#123; return false; &#125; &#125;&#125; 以上就是连接数据库，并对数据库进行查询和更改的方法。连接完了数据库我们就可以开始往后写了。接着实现验证码功能。 验证码我们在 com.db.tools 包中新建一个类，名为 CodeServlet 。我们来想一想，验证码要怎么做。首先，验证码肯定是随机的，不能按顺序，随机的话，那就是用到 java 的随机函数，Random 类，所以我们需要创建一个Random 对象得到一个随机数。随机数给它一个范围，所以我们就要建立一个数组存放我们需要的范围数，如（1，2，3，4，5，6，y，z，j），这样我们生成的数就只会是这些数内的，不可能出现 A，B，c 这些不在括号内的数。确定范围后，我们还需要确定我们的验证码需要几位字母，我想的是5位，不会太多不会太少，你可以根据你的想法定义。接着，得到了一个随机的验证码之后，我们需要一个背景，不能让一些机器轻松的识别到，防止恶意登录注册，所以我们需要绘制生成一张色彩较为混乱的图片。再将验证码与图片混合。这样一张验证码图片就完成了。讲完了思路，我们来实现。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990import java.awt.Color;import java.awt.Font;import java.awt.Graphics2D;import java.awt.image.BufferedImage;import java.io.IOException;import java.util.Random;import javax.servlet.ServletException;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.catalina.Session;import com.sun.image.codec.jpeg.JPEGCodec;import com.sun.image.codec.jpeg.JPEGImageEncoder;public class CodeServlet extends HttpServlet &#123; public static final char[] chars=&#123;'2','3','4','5','6','7','8','9','A','B','C','D','X'&#125;;//验证码池 public static Random random = new Random(); //随机数 public static String ranString; public static String getRandomString()&#123; //获取5位随机数，放在图片里 StringBuffer buffer= new StringBuffer(); for(int i=0;i&lt;5;i++)&#123; buffer.append(chars[random.nextInt(chars.length)]); &#125; return buffer.toString(); &#125; public static Color getRandomColor()&#123;//获取随机的颜色 return new Color(random.nextInt(255),random.nextInt(255),random.nextInt(255)); &#125; public static Color getReverseColor(Color c)&#123; //返回某颜色额反色 return new Color(255-c.getRed(),255-c.getGreen(),255-c.getBlue()); &#125; public CodeServlet() &#123; // TODO Auto-generated constructor stub super(); &#125; public void destroy()&#123; super.destroy(); &#125; public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; response.setContentType(\"image/jpeg\"); String randomString = getRandomString(); request.getSession(true).setAttribute(\"randomString\", randomString); int width=80; int height=30; Color color = getRandomColor(); //随机颜色，用于背景色 Color reverse = getReverseColor(color); //反色，用于前景色 //创建一个彩色图片 BufferedImage bi = new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB); Graphics2D g = bi.createGraphics(); g.setFont(new Font(Font.SANS_SERIF,Font.BOLD,16)); g.setColor(color); g.fillRect(0,0,width,height); g.setColor(reverse); g.drawString(randomString, 18, 20);//绘制随机字符 for(int i=0,n=random.nextInt(100);i&lt;n;i++)&#123; //画最多100个噪音点 g.drawRect(random.nextInt(width), random.nextInt(height), 1, 1); &#125; ServletOutputStream out= response.getOutputStream();//转成JPEG格式 JPEGImageEncoder encoder=JPEGCodec.createJPEGEncoder(out);//编码器 encoder.encode(bi); //对图片进行编码 out.flush(); //输出到客户端 CodeServlet.ranString = randomString; &#125; public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; doGet(request, response); &#125; public void init() throws ServletException &#123; &#125; public boolean sayRandom(String code) &#123; //判断是否生成的验证码一致 if(code.equalsIgnoreCase(ranString)) &#123; return true; &#125; return false; &#125;&#125; 写完这些，我们打开 WebContent 下的 WEB-INF 文件夹下的 web.xml 文件，看看里面有没有： 12345678&lt;servlet&gt; &lt;servlet-name&gt;CodeServlet&lt;/servlet-name&gt; &lt;servlet-class&gt;com.db.tools.CodeServlet&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;CodeServlet&lt;/servlet-name&gt; &lt;url-pattern&gt;/com.db.tools/CodeServlet&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; 如果没有，则把它添加至 “\\“ 标签的下方。接着在Java Resources–WebContent下新建一个 jsp 页面，在 body 标签下添加一个 img 标签。 1&lt;img src=\"com.mail/CodeServlet\" id=\"identity\" onclick=\"reloadImage()\" /&gt; 接着在WebContent文件夹下新建一个名为 js 的文件夹，在里面建一个名为 code 的 js 文件，在里面添加下面的代码。 123function reloadImage()&#123; document.getElementById('identity').src='com.mail/CodeServlet?ts='+new Date().getTime();&#125; 回到 jsp 页面，引入 code.js 文件。运行一下 jsp 文件，看看页面上会不会出现一个验证码。接着单击验证码，验证码会更改。 邮件功能发送邮件，就是一个邮箱向另一个邮箱发送邮件。所以我们得设定一个发送者的邮箱，接着得到用户的邮箱，编写好发送的内容进行发送。在这里里面不变的常量是发送者的邮箱，发送的内容格式，而会改变的就是用户的邮箱，验证码，所以我们定义两个变量存放用户邮箱和验证码。我使用的是qq邮箱的SMTP服务来发送邮件。接着，我们用代码实现，在Java Resources下的src目录下建一个包，包名为 com.mail ,接着在里面创建一个 Mail 类。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101import java.util.Date;import java.util.Properties;import java.util.Random;import javax.activation.DataHandler;import javax.activation.DataSource;import javax.activation.FileDataSource;import javax.mail.*;import javax.mail.internet.InternetAddress;import javax.mail.internet.MimeBodyPart;import javax.mail.internet.MimeMessage;import javax.mail.internet.MimeMultipart;public class Mail &#123;private String result;private String to; //收件人邮箱public void setTo(String to) &#123; //设置收件人邮箱 this.to = to;&#125;private String randomString;public String getRandom() &#123; //得到随机数 return this.randomString;&#125;public static final char[] chars=&#123;'2','3','4','5','6','7','8','9','A','B','C','D','X'&#125;;//验证码池public static Random random = new Random(); //随机数public static String getRandomString()&#123; //获取5位随机数，放在图片里 StringBuffer buffer= new StringBuffer(); for(int i=0;i&lt;5;i++)&#123; buffer.append(chars[random.nextInt(chars.length)]); &#125; return buffer.toString();&#125; public Boolean sendCode() &#123; // 发件人的电子邮件名和密碼 String from = \"发送者邮箱\"; String psd = \"qq开通SMTP服务后生成的密码\"; //设置用户名 String user = \"发送者邮箱\"; Properties properties = new Properties(); try &#123; // 设置用户的认证方式 properties.setProperty( \"mail.smtp.auth\", \"true\" ); //设置传输协议 properties.setProperty( \"mail.transport.protocol\", \"smtp\" ); //SMTP邮件服务器 properties.setProperty( \"mail.smtp.host\", \"smtp.qq.com\" ); //SMTP邮件服务器默认端口 properties.setProperty( \"mail.smtp.port\", \"587\" ); // 获取默认的Session对象。 Session mailSession = Session.getDefaultInstance( properties ); // 创建一个默认的MimeMessage对象。 Message message = new MimeMessage( mailSession ); // 根据session对象获取邮件传输对象Transport Transport transport = mailSession.getTransport(); // 设置 From: 头部的header字段 message.setFrom( new InternetAddress( from ) ); // 设置 To: 头部的header字段 message.addRecipient( Message.RecipientType.TO, new InternetAddress( to ) ); // 设置 Subject: header字段 message.setSubject( \"邮件的标题\" ); // 现在设置的实际消息 BodyPart messageBodyPart = new MimeBodyPart(); randomString = getRandomString(); //获得随机验证码 messageBodyPart.setText(\"您正在修改密码，请在验证码输入框中输入： \"+randomString+\"，以完成操作。\"); Multipart multipart = new MimeMultipart(); multipart.addBodyPart(messageBodyPart); //发送文件 message.setContent(multipart); message.setSentDate(new Date()); // 设置发件人的账户名和密码 transport.connect(user,psd); // 发送邮件，并发送到所有收件人地址，message.getAllRecipients() 获取到的是在创建邮件对象时添加的所有收件人, 抄送人, 密送人 transport.sendMessage( message, message.getAllRecipients() ); result = \"Sent message fully....\"; return true; &#125; catch (Exception e) &#123; e.printStackTrace(); result = \"Error: unable to send message....\"; return false; &#125; &#125; public Boolean isCode(String code) &#123; //判断是否与系统生成的验证码一致 System.out.println(randomString); System.out.print(code); if(code.equalsIgnoreCase(randomString)) &#123; return true; &#125; return false; &#125;&#125; 调用 setTo() 方法即可设置收件人邮箱，调用 isCode() 方法判断用户输入的验证码是否与发送的验证码一致。当以上三个功能都做完后，我们就可以开始写页面功能了，我们先在 Java Resources–WebContent 文件夹下把上面提到的几个页面都建好，为下面做准备。首先是注册页面，使用到的是增加。 注册页面打开 register.jsp 文件，引入 code.js 接着建一个 form 表单。 123456789&lt;form action=\"\"&gt; 学号：&lt;input type=\"text\" name=\"u_nub\" id=\"u_nub\"&gt; 姓名：&lt;input type=\"text\" name=\"u_name\" id=\"u_name\"&gt; 邮箱：&lt;input type=\"email\" name=\"u_mail\" id=\"u_mail\"&gt; 密码：&lt;input type=\"password\" name=\"u_pwd\" id=\"u_pwd\"&gt; &lt;input type=text id=\"txtCode\" name=\"txtCode\"&gt; &lt;img src=\"com.mail/CodeServlet\" id=\"identity\" onclick=\"reloadImage()\" /&gt; &lt;input type=\"submit\" value=\"提交\" id=\"post\" name=\"post\"&gt;&lt;/form&gt; 添加完表单后，我们用 js 写一个表单验证。 12345678910111213141516171819202122232425262728293031323334&lt;script type=\"text/javascript\"&gt; var ub = document.getElementById(\"u_nub\"), un = document.getElementById(\"u_name\"), um = document.getElementById(\"u_mail\"), upw = document.getElementById(\"u_pwd\"), code = document.getElementById(\"txtCode\"), post = document.getElementById(\"post\"); function verify()&#123; if(ub.value == \"\")&#123; alert(\"请输入学号\"); ub.focus(); return false; &#125;else if(un.value==\"\")&#123; alert(\"请输入姓名\"); un.focus(); return false; &#125;else if(um.value==\"\")&#123; alert(\"请输入邮箱\"); um.focus(); return false; &#125;else if(upw.value==\"\")&#123; upw.focus(); alert(\"请输入密码\"); return false; &#125;else if(code.value==\"\")&#123; code.focus(); alert(\"请输入验证码\"); return false; &#125;else &#123; return true; &#125; &#125; post.onclick=verify(); &lt;/script&gt; 先运行一下程序，看看能否正常运行网页。 能正常运行，则可以继续往下写了，下面会用到我们之前写的java类，所以我们需要导包，在页面最上方 &lt;%@ page ……%&gt; 中，在最后添加一句“ import=”com.db.tools.,java.sql.“ ”。最终效果如下： 1&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" import=\"com.db.tools.*,java.sql.*\"%&gt; 这样我们的 jsp 页面才能找到我们的DbUtil类。继续往下。 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;% //判断用户是否提交 if(request.getParameter(\"post\") != null)&#123; CodeServlet m = new CodeServlet(); //获取前端页面数据 String code = request.getParameter(\"txtCode\"); if(code != null &amp;&amp; code != \"\")&#123; //判断验证码是否正确 if(m.sayRandom(code))&#123; //获取前端页面数据 String uNub = request.getParameter(\"u_nub\"); String uName = request.getParameter(\"u_name\"); String uPwd = request.getParameter(\"u_pwd\"); String uMail = request.getParameter(\"u_mail\"); //创建DbUtil类对象 DbUtil db = new DbUtil(); //创建变量存放sql语句 String sql = \"select * from tb_user where user_number='\"+uNub+\"'\"; //如果在数据库中能查询到当前注册用户的学生，则提示错误 if(db.dbQuery(sql).next())&#123; out.println(\"&lt;script&gt;alert('添加失败，此用户已存在');upw.value=\\\"\\\";upw.focus();&lt;/script&gt;\"); &#125; else&#123; //在数据库中添加该用户 sql = \"insert into tb_user values('123',+'\"+uNub+\"','\"+uName+\"','\"+uMail+\"','\"+uPwd+\"')\"; if(db.dbUpdate(sql))&#123; response.sendRedirect(\"selectStudent.jsp\"); &#125; &#125; &#125; else&#123;%&gt; &lt;script&gt;alert(\"验证码错误\");&lt;/script&gt;&lt;% &#125; &#125; &#125;%&gt; 这样我们的注册页面就完成了，此时可以运行一下是否正常运行。 登陆页面打开 login.jsp ，引入 code.js 文件，接着写一个表单。 123456789&lt;form action=\"\"&gt; 学号：&lt;input type=\"text\" name=\"u_nub\"&gt; 密码：&lt;input type=\"password\" name=\"u_pwd\"&gt; &lt;input type=text id=\"txtCode\" name=\"txtCode\"&gt; &lt;img src=\"com.mail/CodeServlet\" id=\"identity\" onclick=\"reloadImage()\" /&gt; &lt;input type=\"submit\" value=\"登录\"&gt; &lt;a href=\"register.jsp\"&gt;&lt;input type=\"button\" value=\"注册\" name=\"post\"&gt;&lt;/a&gt; &lt;a href=\"forgotPWD.jsp\" class=\"a\"&gt;忘记密码？&lt;/a&gt;&lt;/form&gt; 接着还是用 js 写一个表单验证，我的建议是外链一个 js 文件，里面写一个函数，要用的时候直接调用，避免写重复的代码， input 标签里的 name 和 id 不同的页面但是是同一个数据的可以取相同名。例如注册页面的表单中有学号和密码，登陆页面也有，并且这两个含义相同，则可以取相同的 name 和 id ，这样直接一个函数就搞定了。js 代码搞定后，就是jsp代码，首先像注册页面一样导包，这里也会用到验证码功能，所以依旧是导入 “ com.db.tools.,java.sql. ” 。 12345678910111213141516171819202122232425262728293031323334353637383940&lt;% //判断用户是否提交 if(request.getParameter(\"post\") ！= null)&#123; //判断用户是否有输入学号 if(uName != null &amp;&amp; uName != \"\" )&#123; CodeServlet m = new CodeServlet(); String code = request.getParameter(\"txtCode\"); //获取前端的学号 String uName = request.getParameter(\"u_nub\"); //获取前端的密码 String uPwd = request.getParameter(\"u_pwd\"); //判断用户是否有输入验证码 if(code != null &amp;&amp; code != \"\")&#123; //判断用户输入的验证码是否正确 if(m.sayRandom(code))&#123; //创建sql语句 String sql = \"select * from tb_user where user_number='\"+uName+\"' and user_pwd='\"+uPwd+\"'\"; //创建DbUtil类对象 连接数据库 DbUtil db = new DbUtil(); //创建ResultSet对象，存放结果集 ResultSet rs = db.dbQuery(sql); if(rs.next())&#123; session.setAttribute(\"u_nub\",uName); response.sendRedirect(\"selectStudent.jsp\"); //跳转至查询学生信息界面 &#125;else&#123; out.write(\"登陆失败\"); &#125; &#125; else&#123; %&gt; &lt;script&gt;alert(\"验证码错误\");&lt;/script&gt; &lt;% &#125; &#125; &#125; &#125;%&gt; 以上就是登陆页面的jsp代码，完成后尝试登陆一下，看看能否成功。 找回密码页面找回密码呢，上面也说过，就是要确认用户的身份，是否为本人操作，这就需要验证码功能了。确定为本人后就跳转至设置密码页面，让用户重新设置密码。打开 forgotPWD.jsp 页面，这里就不需要引入 code.js 了，这里需要用到邮箱功能，所以导入的包是“ com.mail,java.sql.,com.db.tools. ”，接着建一个表单。 1234567&lt;form&gt; &lt;input type=\"number\" class=\"textbox\" placeholder=\"请输入学号....\" id=\"u_nub\" name=\"u_nub\"&gt; &lt;input type=\"email\" class=\"textbox\" placeholder=\"请输入邮箱....\" id=\"u_mail\" name=\"u_mail\"&gt; &lt;input type=\"text\" class=\"textcode\" placeholder=\"请输入验证码....\" id=\"txtCode\" name=\"txtCode\"&gt; &lt;button class=\"textbutton\" id=\"sendCode\" name=\"sendCode\" &gt;发送验证码&lt;/button&gt; &lt;input type=\"submit\" class=\"nextstep\" value=\"下一步\" name=\"next\" id=\"next\" &gt;&lt;/form&gt;&lt;a href=\"login.jsp\"&gt;登录&lt;/a&gt;&lt;a href=\"register.jsp\"&gt;注册&lt;/a&gt; 开始写 jsp 代码。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667//创建一个变量，存放验证码&lt;%! String mailCode; %&gt;&lt;%if(request.getParameter(\"sendCode\") != null)&#123; String u_nub = request.getParameter(\"u_nub\"); String u_mail = request.getParameter(\"u_mail\"); if(u_mail != null &amp;&amp; u_mail !=\"\")&#123; DbUtil db = new DbUtil(); String sql = \"select * from tb_user where user_number='\"+u_nub+\"'and user_mail='\"+u_mail+\"'\"; if(db.dbQuery(sql).next())&#123; Mail mail = new Mail(); mail.setTo(u_mail); if(mail.sendCode())&#123; //判断是否发送成功 mailCode=mail.getRandom();%&gt; &lt;script&gt; var num=document.getElementById(\"u_nub\"); var mail=document.getElementById(\"u_mail\"); var sendButton = document.getElementById(\"sendCode\"); function sendSuccess()&#123; alert(\"发送成功\"); sendButton.setAttribute(\"disabled\", true); //发送按钮不可用 zhi(); &#125; function sendFailure()&#123; alert(\"发送失败\"); zhi(); &#125; sendSuccess(); function zhi()&#123; num.value=\"&lt;%=u_nub%&gt;\"; mail.value=\"&lt;%=u_mail%&gt;\"; &#125; &lt;/script&gt;&lt;% System.out.println(\"邮箱：\"+u_mail+\"发送成功\"); &#125; else&#123; System.out.println(\"邮箱：\"+u_mail+\"发送失败\");%&gt; &lt;script&gt;sendFailure();&lt;/script&gt;&lt;% &#125; &#125; else&#123;%&gt; &lt;script&gt;alert(\"用户不存在或邮箱错误\");&lt;/script&gt;&lt;% &#125; &#125; &#125; if(request.getParameter(\"next\") != null)&#123; String code = request.getParameter(\"txtCode\"); if(code != null &amp;&amp; code != \"\" &amp;&amp; mailCode !=null)&#123; if(mailCode.equalsIgnoreCase(code))&#123; session.setAttribute(\"u_number\", u_nub); response.sendRedirect(\"setPWD.jsp\"); //验证码正确则跳转至设置密码页面 &#125; else&#123;%&gt; &lt;script&gt;alert(\"验证码错误\");&lt;/script&gt;&lt;% &#125; &#125; &#125;%&gt; 这就是找回密码页面啦，身份识别正确则跳转至 setPWD.jsp 页面。 设置密码页面打开 setPWD.jsp 页面，同样的步骤，导包、建表单。 1234567&lt;form&gt; &lt;input type=\"password\" class=\"textbox1\" placeholder=\"请输入新密码....\" name=\"u_pwd\"&gt; &lt;input type=\"password\" class=\"textbox1\" placeholder=\"请再次输入新密码....\" id=\"passwords\" name=\"u_pwds\"&gt; &lt;input type=\"submit\" class=\"back1\" value=\"确定\" name=\"ok\"&gt;&lt;/form&gt;&lt;a href=\"login.jsp\"&gt;登录&lt;/a&gt;&lt;a href=\"register.jsp\"&gt;注册&lt;/a&gt; 因为我们不能让用户随便就访问到这个页面，所以得设置一个拦截器，让不是从 forgotPWD.jsp 页面跳转过来，而是直接访问这个页面的用户自动跳转至 forgotPWD.jsp 页面。这里我使用的是 判断 session 的值是否为空的方法，因为forgotPWD.jsp 跳转时会将学号传到 setPWD.jsp 页面，这也算是一种思路吧。 123456789101112131415161718192021222324252627&lt;% if(session.getAttribute(\"u_number\")==null)&#123; response.sendRedirect(\"login.jsp\"); &#125; else&#123; if(request.getParameter(\"post\") != null)&#123; String password=request.getParameter(\"u_pwd\"),passwords=request.getParameter(\"u_pwds\"); if(password.equals(passwords) &amp;&amp; password != \"\" &amp;&amp; password != null)&#123; String u_number = (String)session.getAttribute(\"u_number\"); String sql = \"Update tb_user set user_pwd = '\"+passwords+\"' where user_number='\"+u_number+\"'\"; DbUtil db = new DbUtil(); if(db.dbUpdate(sql))&#123; System.out.println(\"修改成功\");%&gt; &lt;script&gt;alert(\"修改成功\");&lt;/scripot&gt;&lt;% response.sendRedirect(\"login.jsp\"); &#125; &#125; else&#123;%&gt; &lt;script&gt;alert(\"两次密码输入不一致\")&lt;/script&gt;&lt;% &#125; &#125; &#125;%&gt; 到这里，增删查改四个步骤已经实现了增加、查询、修改了，就剩下最后一个删除。后面的页面，我就放上代码，也不说太多了，毕竟大部分都是相同的，只是操作的表不同。 删除学生页面其实，删除学生的页面是打不开的，里面只放了一段 jsp 代码。用户在 selectStudent.jsp 这个查看所有学生信息页面的操作一栏中，点击删除，即把那条学生信息的学号传给删除学生页面（delStudent.jsp）, delStudent.jsp 接收到学号，就在数据库中删除掉学生信息。 123456789101112&lt;% if(session.getAttribute(\"u_nub\") == null)&#123; response.sendRedirect(\"login.jsp\"); &#125; String stNo = request.getParameter(\"st_no\"); String sql = \"DELETE FROM tb_student WHERE stuNo='\"+stNo+\"'\"; DbUtil db = new DbUtil(); if(db.dbUpdate(sql))&#123; response.sendRedirect(\"selectStudent.jsp\"); out.println(\"删除成功！\"); &#125;%&gt; 这也是十分简单了。 修改个人信息页面12345678910&lt;form&gt; 学号：&lt;input type=\"text\" class=\"stuid\" name=\"u_nub\" id=\"u_nub\" disabled&gt; 姓名：&lt;input type=\"text\" class=\"stuid\" name=\"u_name\" id=\"u_name\"&gt;&lt;br /&gt; &lt;br /&gt; &lt;br /&gt; &lt;div class=\"stusex\"&gt; 性别：&lt;input type=\"radio\" name=\"sex\" value=\"男\" class=\"stusex1\" id=\"sex1\"&gt;&amp;nbsp;&amp;nbsp;男 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input type=\"radio\" name=\"sex\" id=\"sex2\" value=\"女\" class=\"stusex1\" checked=\"checked\"&gt;&amp;nbsp;&amp;nbsp;女 &lt;/div&gt; 出生日期：&lt;input type=\"date\" class=\"stuage\" name=\"u_bty\" id=\"u_bty\"&gt;&lt;br /&gt; 邮箱：&lt;input type=\"email\" class=\"emails\" name=\"u_mail\" id=\"u_mail\"&gt;&lt;br /&gt; &lt;a href=\"personManages.jsp\"&gt;&lt;input type=\"button\" value=\"重置\" class=\"stubtu\" name=\"reduction\"&gt;&lt;/a&gt; &lt;input type=\"submit\" value=\"提交\" class=\"stubtu\" name=\"post\"&gt;&lt;/form&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;% String uNum = (String)session.getAttribute(\"u_nub\"); if(uNum != null)&#123; //判断用户是否是已登陆状态 String uName; String uSex; String uBty; String uMail; String sql = \" select * from tb_user where user_number='\"+uNum+\"'\"; DbUtil db = new DbUtil(); ResultSet rs=db.dbQuery(sql); if(rs.next())&#123; //rs 1.id 2.学号 3.姓名 4.性别 5.生日 6.邮箱 uName = rs.getString(3); uSex = rs.getString(4); uBty = rs.getString(5); uMail = rs.getString(6); %&gt; &lt;script type=\"text/javascript\"&gt; document.getElementById(\"u_nub\").value=\"&lt;%=uNum%&gt;\"; document.getElementById(\"u_name\").value=\"&lt;%=uName%&gt;\"; document.getElementById(\"u_bty\").value=\"&lt;%=uBty%&gt;\"; document.getElementById(\"u_mail\").value=\"&lt;%=uMail%&gt;\"; var sex1 = document.getElementById(\"sex1\"); var sex2 = document.getElementById('sex2'); var usex = \"&lt;%=uSex%&gt;\"; if(usex == '女')&#123; sex2.setAttribute(\"checked\",\"checked\"); &#125; else&#123; sex1.setAttribute(\"checked\",\"checked\"); &#125; &lt;/script&gt; &lt;% &#125; if(request.getParameter(\"post\") != null)&#123; //判断用户是否点击提交按钮%&gt; &lt;script type=\"text/javascript\"&gt; var confirm = confirm(\"确定修改吗？\"); if(confirm)&#123;&lt;% String upSql = \"update tb_user set user_name='\"+request.getParameter(\"u_name\")+\"',user_sex='\"+request.getParameter(\"sex\")+\"',user_mail='\"+request.getParameter(\"u_mail\")+\"',user_birthday='\"+request.getParameter(\"u_bty\")+\"' where user_number='\"+uNum+\"'\"; if(db.dbUpdate(upSql))&#123; //判断是否更新成功%&gt; alert(\"修改成功\"); window.location=\"personManages.jsp\"; &#125; else&#123; alert(\"修改失败\"); &#125; &lt;/script&gt; &lt;% &#125; &#125; &#125; else&#123; response.sendRedirect(\"login.jsp\"); &#125; if(request.getParameter(\"outLogin\") != null)&#123; //退出登录按钮 session.invalidate(); response.sendRedirect(\"login.jsp\"); &#125;%&gt; 查看学生信息页面123456789101112131415161718192021222324252627282930313233343536373839&lt;% if(session.getAttribute(\"u_nub\") == null)&#123; response.sendRedirect(\"login.jsp\"); &#125; String sql = \" select * from tb_student\"; DbUtil db = new DbUtil(); ResultSet rs=db.dbQuery(sql);%&gt; &lt;table class=\"table\" cellspacing=\"0\"&gt; &lt;tr class=\"th\"&gt; &lt;td&gt;学号&lt;/td&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;td&gt;户籍&lt;/td&gt; &lt;td&gt;出生日期&lt;/td&gt; &lt;td&gt;班级&lt;/td&gt; &lt;td&gt;操作&lt;/td&gt; &lt;/tr&gt;&lt;% while(rs.next())&#123;%&gt; &lt;tr name=\"data\" class=\"tr_bg\"&gt; &lt;td class=\"tr_id\"&gt;&lt;%=rs.getString(1) %&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt;&lt;%=rs.getString(2) %&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt;&lt;%=rs.getString(3)%&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt;&lt;%=rs.getString(4)%&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt;&lt;%=rs.getString(5)%&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt;&lt;%=rs.getString(6)%&gt;&lt;/td&gt; &lt;td class=\"tr_txt\"&gt; &lt;a href=\"delete.jsp?st_no=&lt;%=rs.getString(1) %&gt;\" onclick=\"return confirm('你确认要删除姓名为：&lt;%=rs.getString(2) %&gt;的数据吗？')\"&gt;删除&lt;/a&gt; &lt;a href=\"stuinfUpdate.jsp?stNo=&lt;%=rs.getString(1)%&gt;\"&gt;修改&lt;/a&gt; &lt;a href=\"addStudent.jsp\"&gt;添加学生&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt;&lt;% &#125;%&gt; &lt;/table&gt; 添加学生信息页面12345678910&lt;form class=\"form\"&gt; 学号：&lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_No\" id=\"st_No\"&gt; 姓名： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_name\" id=\"st_name\"&gt; 性别： &lt;input type=\"radio\" name=\"sex\" value=\"男\" class=\"stuformsex\" checked=\"checked\"&gt;&amp;nbsp;&amp;nbsp;男&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type=\"radio\" name=\"sex\" value=\"女\" class=\"stuformsex\"&gt;&amp;nbsp;&amp;nbsp;女 出生日期： &lt;input type=\"date\" align=\"left\" class=\"input\"name=\"st_bty\" id=\"st_bty\"&gt; 户籍： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_Place\" id=\"st_Place\"&gt; 班级： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_claName\" id=\"st_claName\"&gt; &lt;button class=\"stuformbut\" onclick=\"return verify();\"&gt;提交&lt;/button&gt; &lt;button class=\"stuformbut\" onclick=\"javascript:window.location.href='selectStudent.jsp'\"&gt;返回&lt;/button&gt;&lt;/form&gt; 1234567891011121314151617181920212223&lt;% if(session.getAttribute(\"u_nub\") == null)&#123; response.sendRedirect(\"login.jsp\"); &#125; if(request.getParameter(\"st_No\") != null &amp;&amp; request.getParameter(\"st_No\") != \"\")&#123; String stNo = request.getParameter(\"st_No\"); String stName = request.getParameter(\"st_name\"); String stSex = request.getParameter(\"sex\"); String stPlac = request.getParameter(\"st_Place\"); String stByt = request.getParameter(\"st_bty\"); String stClna = request.getParameter(\"st_claName\"); DbUtil db = new DbUtil(); String sql = \"select * from tb_student where stuNo='\"+stNo+\"'\"; if(db.dbQuery(sql).next())&#123; out.println(\"&lt;script&gt;alert('添加失败，学号已存在');&lt;/script&gt;\"); &#125;else&#123; sql = \"insert into tb_student values('\"+stNo+\"','\"+stName+\"','\"+stSex+\"','\"+stPlac+\"','\"+stByt+\"','\"+stClna+\"')\"; if(db.dbUpdate(sql))&#123; response.sendRedirect(\"stuinFormation.jsp\"); &#125; &#125; &#125;%&gt; 修改学生信息页面12345678910&lt;form class=\"form\"&gt; 学号：&lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_No\" id=\"st_No\"&gt; 姓名： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_name\" id=\"st_name\"&gt; 性别： &lt;input type=\"radio\" name=\"sex\" value=\"男\" class=\"stuformsex\" checked=\"checked\"&gt;&amp;nbsp;&amp;nbsp;男&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type=\"radio\" name=\"sex\" value=\"女\" class=\"stuformsex\"&gt;&amp;nbsp;&amp;nbsp;女 出生日期： &lt;input type=\"date\" align=\"left\" class=\"input\"name=\"st_bty\" id=\"st_bty\"&gt; 户籍： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_Place\" id=\"st_Place\"&gt; 班级： &lt;input type=\"text\" align=\"left\" class=\"input\" name=\"st_claName\" id=\"st_claName\"&gt; &lt;button class=\"stuformbut\" onclick=\"return verify();\"&gt;提交&lt;/button&gt; &lt;button class=\"stuformbut\" onclick=\"javascript:window.location.href='selectStudent.jsp'\"&gt;返回&lt;/button&gt;&lt;/form&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;% String stNo = (String)session.getAttribute(\"stNo\"); DbUtil db = new DbUtil(); if(session.getAttribute(\"u_nub\") == null)&#123; response.sendRedirect(\"login.jsp\"); &#125; if(request.getParameter(\"stNo\") != null)&#123; stNo = request.getParameter(\"stNo\"); session.setAttribute(\"stNo\", stNo); String sql = \"select * from tb_student where stuNo='\"+stNo+\"'\"; ResultSet rs = db.dbQuery(sql); if(rs.next())&#123;%&gt; &lt;script&gt; document.getElementById(\"st_No\").value=\"&lt;%=rs.getString(1)%&gt;\"; document.getElementById(\"st_name\").value=\"&lt;%=rs.getString(2)%&gt;\"; var usex = \"&lt;%=rs.getString(3)%&gt;\"; if(usex == '女')&#123; sex2.setAttribute(\"checked\",\"checked\"); &#125; else&#123; sex1.setAttribute(\"checked\",\"checked\"); &#125; document.getElementById(\"st_Place\").value=\"&lt;%=rs.getString(4)%&gt;\"; document.getElementById(\"st_bty\").value=\"&lt;%=rs.getString(5)%&gt;\"; document.getElementById(\"st_claName\").value=\"&lt;%=rs.getString(6)%&gt;\"; &lt;/script&gt;&lt;% &#125; &#125; if(request.getParameter(\"post\")!=null &amp;&amp; stNo != null)&#123; String sql = \"update tb_student set stu_Name='\"+request.getParameter(\"st_name\")+\"',stu_sex='\"+request.getParameter(\"st_sex\")+\"',stu_nativeplace='\"+request.getParameter(\"st_Place\")+\"',stu_birthday='\"+request.getParameter(\"st_bty\")+\"',stu_classname='\"+request.getParameter(\"st_claName\")+\"' where stuNo='\"+stNo+\"'\"; if(db.dbUpdate(sql))&#123; response.sendRedirect(\"stuinfManages.jsp\");%&gt; &lt;script type=\"text/javascript\"&gt;alert(\"修改成功\");&lt;/script&gt;&lt;% &#125; else&#123;%&gt; &lt;script type=\"text/javascript\"&gt;alert(\"修改失败\");&lt;/script&gt;&lt;% &#125; &#125;%&gt; END至此，差不多整个项目的雏形已经出来了，就是差一个页面的美化。不知不觉写了这么多，到后面其实已经有点累了，一度想着要不算了，反正都是重复的，还好没有放弃，还是把所有的页面代码贴了出来，尽管没有刚开始写的那么详细，但是我相信前面要是认认真真看了的，后面的肯定也会理解的。这个项目就告一段落啦，后面还想着会用 spring 重写一遍，在这里立一个 flag 。","categories":[{"name":"JSP","slug":"JSP","permalink":"https://04071011.xyz/categories/JSP/"}],"tags":[{"name":"JSP","slug":"JSP","permalink":"https://04071011.xyz/tags/JSP/"},{"name":"作业项目","slug":"作业项目","permalink":"https://04071011.xyz/tags/作业项目/"},{"name":"2019","slug":"2019","permalink":"https://04071011.xyz/tags/2019/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-01-15T15:39:05.459Z","updated":"2019-01-19T11:55:25.799Z","comments":true,"path":"2019/01/15/hello-world/","link":"","permalink":"https://04071011.xyz/2019/01/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1234567891011121314151617181920212223242526272829303132333435363738394041424344$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generatehighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlighthighlight$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}